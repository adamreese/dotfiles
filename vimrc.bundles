" vim: syntax=vim :

set nocompatible

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Let Vundle manage Vundle
Bundle 'gmarik/vundle'

" Various editing plugins
" Bundle 'L9'
" Bundle 'SuperTab'
" Bundle 'amirh/HTML-AutoCloseTag'
Bundle 'kana/vim-textobj-user'
Bundle 'tpope/vim-abolish'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-haml'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-surround'
Bundle 'slack/vim-align'
Bundle 'vim-scripts/ctags.vim'
Bundle 'majutsushi/tagbar'

" Comment plugins
Bundle 'scrooloose/nerdcommenter'

" File managers/explorers
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdtree'

if executable('ack')
  Bundle 'mileszs/ack.vim'
endif

if executable('ag')
  Bundle 'rking/ag.vim'
endif

" Status bar plugins
Bundle 'adamreese/vim-airline'

" Colorschemes
" Bundle 'Lokaltog/vim-distinguished'
Bundle '29decibel/codeschool-vim-theme'
Bundle 'altercation/vim-colors-solarized'
" Bundle 'areese/vim-hybrid'
Bundle 'w0ng/vim-hybrid'
Bundle 'jonathanfilip/vim-lucius'
Bundle 'nanotech/jellybeans.vim'
Bundle 'vim-scripts/xorium.vim'
Bundle 'chriskempson/base16-vim'
Bundle 'cschlueter/vim-wombat'

" Syntax plugins
Bundle 'jnwhiteh/vim-golang'
Bundle 'nelstrom/vim-textobj-rubyblock'
Bundle 'othree/javascript-libraries-syntax.vim'
Bundle 'tpope/vim-markdown'
Bundle 'tpope/vim-rails'
Bundle 'vim-ruby/vim-ruby'

" Syntax check on buffer save
Bundle 'scrooloose/syntastic'

" Source Control plugins
Bundle 'tpope/vim-fugitive'

Bundle 'Shougo/neocomplete.vim'
let g:acp_enableAtStartup = 0 " Disable AutoComplPop
let g:neocomplete#enable_at_startup = 1 " Use neocomplete
let g:neocomplete#enable_smart_case = 1 " Use smartcase
let g:neocomplete#enable_auto_delimiter = 1
let g:neocomplete#max_list = 15
let g:neocomplete#force_overwrite_completefunc = 1

Bundle 'neowit/vim-force.com'
let g:apex_backup_folder = expand("/tmp/salesforce/backup")
let g:apex_temp_folder = expand("/tmp/salesforce/tmp")
let g:apex_properties_folder = expand("$HOME/p/salesforce/properties")
let g:apex_tooling_force_dot_com_path = expand("$HOME/p/salesforce/bin/tooling")
let g:apex_workspace_path = expand("$HOME/p/salesforce/workspace")

filetype on
