" =======================================================================
" vimrc {{{
" =======================================================================
if has('vim_starting') | set encoding=utf-8 nobomb | endif
scriptencoding utf-8
" }}}
" =======================================================================
" Enviroment: {{{
" =======================================================================

" Create global config for cache and data directories
let $CACHEDIR = expand($HOME.'/.cache/vim')
let $DATADIR  = expand($HOME.'/.local/share/vim')
let $VIMDIR   = fnamemodify(resolve(expand('<sfile>:p')), ':h')

" }}}
" =======================================================================
" Plug: {{{
" =======================================================================

call plug#begin($VIMDIR.'/plugged')

Plug 'FelikZ/ctrlp-py-matcher'
Plug 'Shougo/echodoc.vim'
Plug 'Shougo/vimproc.vim',      { 'build': 'make' }
Plug 'airblade/vim-gitgutter'
Plug 'benekastah/neomake',      { 'on': 'Neomake' }
Plug 'ctrlpvim/ctrlp.vim'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf',            { 'dir': '~/.fzf', 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/gv.vim',         { 'on': 'GV' }
Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
Plug 'kepbod/quick-scope'
Plug 'majutsushi/tagbar',       { 'on': 'TagbarToggle' }
Plug 'rhysd/committia.vim'
Plug 'rking/ag.vim'
Plug 'scrooloose/nerdtree'
Plug 'slack/vim-align'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-scriptease'
Plug 'tpope/vim-surround'
Plug 'tweekmonster/startuptime.vim'
Plug 'vimwiki/vimwiki'
Plug 'w0ng/vim-hybrid'

if exists('$TMUX')
  Plug 'christoomey/vim-tmux-navigator'
endif

" -- Languages ----------------------------------------------------------
Plug 'chrisbra/vim-zsh',        { 'for': 'zsh' }
Plug 'fatih/vim-go',            { 'for': 'go' }
Plug 'syngan/vim-vimlint',      { 'for': 'vim' }
Plug 'tmux-plugins/vim-tmux',   { 'for': 'tmux' }
Plug 'vim-ruby/vim-ruby',       { 'for': 'ruby' }
Plug 'ynkdir/vim-vimlparser',   { 'for': 'vim' }
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }

" -- Completion ---------------------------------------------------------
Plug 'Raimondi/delimitMate'
Plug 'Shougo/neosnippet'
Plug 'Shougo/neosnippet-snippets'

if has('nvim')
  function! DoRemote(arg)
    UpdateRemotePlugins
  endfunction
  Plug 'Shougo/deoplete.nvim', { 'do': function('DoRemote') }
  Plug 'zchee/deoplete-go',    { 'for': 'go', 'do': 'make'}
  Plug 'Shougo/neco-vim',      { 'for': 'vim' }
else
  Plug 'Shougo/neocomplete'
endif

call plug#end()

" }}}
" =======================================================================
" Map Leaader: {{{
" =======================================================================

let g:mapleader = ','
let g:maplocalleader = ','

" }}}
" -----------------------------------------------------------------------
" Local Settings: {{{
" -----------------------------------------------------------------------

let s:vimrc_local = $VIMDIR . '/.vimrc.local'
if filereadable(s:vimrc_local)
  execute 'source ' . s:vimrc_local
endif

" }}}
" -----------------------------------------------------------------------
" vim:foldmethod=marker
