# ==============================================================================
# ~/.tmux.conf
# ==============================================================================

# ------------------------------------------------------------------------------
# Session options
# ------------------------------------------------------------------------------

set-option -g prefix2 C-Space
bind C-Space send-prefix -2

# start window indexing at 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# scrollback buffer n lines
set-option -gs history-limit 99999

# listen for activity on all windows
set-option -g bell-action any

# use 256 colour terminal
set-option -gs default-terminal "tmux-256color"

# add truecolor support (tmux info | grep Tc)
set-option -gs terminal-overrides ",xterm-256color:Tc"

# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set-option -gs escape-time 0

# Window title
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"

if-shell 'hash reattach-to-user-namespace' 'set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"'

# Enable mouse
set-option -g mouse on

set-option -gs focus-events on

# ------------------------------------------------------------------------------
# Window options
# ------------------------------------------------------------------------------

# xterm-style function key sequences
set-window-option -g xterm-keys on

# control automatic window renaming
set-window-option -g automatic-rename on
set-window-option -g allow-rename off

set-window-option -g aggressive-resize on

# ------------------------------------------------------------------------------
# Key bindings
# ------------------------------------------------------------------------------

# reload settings
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# prefix ctrl-Space
bind-key c-Space last-window

# prefix Space
bind-key Space send-prefix

# detach client
bind-key d detach
bind-key C-d detach

# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window
bind-key C-q confirm-before kill-pane

# copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer

# toggle statusbar
bind-key s set status

# vim-like split
bind-key n new-window -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# ------------------------------------------------------------------------------
# Statusbar settings
# ------------------------------------------------------------------------------

# use vi-style key bindings in the status line
set-option -g status-keys vi

source-file $HOME/.dotfiles/tmux/theme.tmux

# -----------------------------------------------------------------------------
# vim: fen fdl=0 fdm=marker
