#!/usr/bin/env bash
set -euo pipefail

((${TRACE-})) && set -x

rule() {
  local cols=80 char=$'\u2500'
  printf '%*s\n' "${cols}" '' | tr ' ' "${char}"
}

header() {
  local msg="$*"

  rule
  printf '\033[0;32m%s\033[0;m\n' "$msg"
  rule
}

sync_repo() {
  local repo="${1:-.}"

  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "${repo} is not a git repo"
    return
  fi

  if [[ -n "$(git status --porcelain --ignore-submodules -unormal)" ]]; then
    echo "${repo} has uncommitted changes"
    return
  fi

  git -c gc.auto=0 fetch --quiet --no-tags --recurse-submodules=no >/dev/null 2>&1

  local behind
  behind=$(git rev-list --right-only --count HEAD...@'{u}' 2>/dev/null)
  if (( behind )); then
    header "Updating repo ${repo}"

    git --no-pager log --no-merges --stat --color HEAD...@'{u}'

    git pull --quiet
    git submodule sync --quiet
    git submodule update --init --quiet
  fi
}

main() {
  export GHQ_ROOT="${PWD}"

  while read -r repo; do
    (
      cd "${repo}"
      sync_repo "${repo}"
    )
  done < <(ghq list) | less
}

main "$@"
